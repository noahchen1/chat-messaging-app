{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repo\\\\offical-messenger\\\\src\\\\context\\\\ConversationsProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, createContext, useState, useEffect, useCallback } from 'react';\nimport { useAuth } from './AuthProvider';\nimport { useSocket } from './SocketProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/createContext();\nexport function useConversations() {\n  _s();\n  return useContext(ConversationsContext);\n}\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function ConversationsProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const CONVERSATIONS_URL = 'http://localhost:4000/conversations';\n  const UPDATE_URL = 'http://localhost:4000/new-conversation';\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversationIdx, setSelectedConversationIdx] = useState(0);\n  const {\n    auth\n  } = useAuth();\n  const socket = useSocket();\n  const refreshToken = auth.refreshToken;\n  const getConversations = useCallback(() => {\n    axios.post(CONVERSATIONS_URL, {\n      refreshToken: refreshToken\n    }).then(res => {\n      setConversations(res.data);\n    });\n  }, [setConversations]);\n  const createConversation = recipients => {\n    const requestBody = {\n      refreshToken: refreshToken,\n      conversation: {\n        recipients: recipients,\n        messages: []\n      }\n    };\n    axios.post(UPDATE_URL, requestBody).then(res => setConversations(res.data));\n  };\n  const addMessageToConversation = useCallback(_ref2 => {\n    let {\n      recipients,\n      text,\n      sender\n    } = _ref2;\n    const newMessage = {\n      refreshToken: refreshToken,\n      conversation: {\n        recipients: recipients,\n        message: {\n          sender,\n          text\n        }\n      }\n    };\n    axios.post(UPDATE_URL, newMessage).then(res => setConversations(res.data));\n  }, [setConversations]);\n  const sendMessage = (recipients, text) => {\n    addMessageToConversation({\n      recipients,\n      text,\n      sender: auth.username\n    });\n  };\n  useEffect(() => {\n    getConversations();\n  }, [getConversations]);\n  useEffect(() => {\n    if (socket === null) return;\n    socket.on('recieve-message', addMessageToConversation);\n    return () => socket.off('recieve');\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: {\n      conversations,\n      createConversation,\n      selectedConversationIdx,\n      setSelectedConversationIdx,\n      sendMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s2(ConversationsProvider, \"fNTCkhuxu3kjmFgraxXnGmPbEyU=\", false, function () {\n  return [useAuth, useSocket];\n});\n_c = ConversationsProvider;\nvar _c;\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"names":["axios","React","useContext","createContext","useState","useEffect","useCallback","useAuth","useSocket","ConversationsContext","useConversations","ConversationsProvider","children","CONVERSATIONS_URL","UPDATE_URL","conversations","setConversations","selectedConversationIdx","setSelectedConversationIdx","auth","socket","refreshToken","getConversations","post","then","res","data","createConversation","recipients","requestBody","conversation","messages","addMessageToConversation","text","sender","newMessage","message","sendMessage","username","on","off"],"sources":["D:/Repo/offical-messenger/src/context/ConversationsProvider.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, createContext, useState, useEffect, useCallback } from 'react'\r\nimport { useAuth } from './AuthProvider';\r\nimport { useSocket } from './SocketProvider';\r\n\r\nconst ConversationsContext = createContext();\r\n\r\nexport function useConversations() {\r\n    return useContext(ConversationsContext);\r\n}\r\n\r\nexport function ConversationsProvider({ children }) {\r\n    const CONVERSATIONS_URL = 'http://localhost:4000/conversations';\r\n    const UPDATE_URL = 'http://localhost:4000/new-conversation';\r\n    const [conversations, setConversations] = useState([]);\r\n    const [selectedConversationIdx, setSelectedConversationIdx] = useState(0);\r\n    const { auth } = useAuth();\r\n    const socket = useSocket();\r\n    const refreshToken = auth.refreshToken;\r\n\r\n    const getConversations = useCallback(() => {\r\n        axios.post(CONVERSATIONS_URL, { refreshToken: refreshToken }).then(res => {\r\n            setConversations(res.data);\r\n        });\r\n    }, [setConversations]);\r\n\r\n    const createConversation = recipients => {\r\n        const requestBody = {\r\n            refreshToken: refreshToken,\r\n            conversation: { recipients: recipients, messages: [] }\r\n        }\r\n\r\n        axios.post(UPDATE_URL, requestBody)\r\n            .then(res => setConversations(res.data));\r\n    };\r\n\r\n    const addMessageToConversation = useCallback(({ recipients, text, sender }) => {\r\n        const newMessage = {\r\n            refreshToken: refreshToken,\r\n            conversation: { recipients: recipients, message: {sender, text}}\r\n        };\r\n\r\n        axios.post(UPDATE_URL, newMessage)\r\n            .then(res => setConversations(res.data));\r\n\r\n    }, [setConversations]);\r\n\r\n    const sendMessage = (recipients, text) => {\r\n        addMessageToConversation({ recipients, text, sender: auth.username })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getConversations();\r\n    }, [getConversations]);\r\n\r\n    useEffect(() => {\r\n        if (socket === null) return\r\n        \r\n        socket.on('recieve-message', addMessageToConversation);\r\n\r\n        return () => socket.off('recieve')\r\n    }, [socket])\r\n\r\n    return (\r\n        <ConversationsContext.Provider value={{ conversations, createConversation, selectedConversationIdx, setSelectedConversationIdx, sendMessage }}>\r\n            {children}\r\n        </ConversationsContext.Provider>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}