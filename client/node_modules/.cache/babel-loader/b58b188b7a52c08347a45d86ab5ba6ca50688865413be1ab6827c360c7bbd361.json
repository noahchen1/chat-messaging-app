{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repo\\\\offical-messenger\\\\src\\\\components\\\\PersistLogin.js\",\n  _s = $RefreshSig$();\nimport { Outlet } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/AuthProvider\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersistLogin() {\n  _s();\n  const REFRESH_URL = 'http://localhost:4000/refresh';\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    auth,\n    setAuth,\n    rememberUser\n  } = useAuth();\n  useEffect(() => {\n    let isMounted = true;\n    if (auth === [] || !rememberUser) {\n      setIsLoading(false);\n    } else {\n      const refreshToken = {\n        refreshToken: auth.refreshToken\n      };\n      const getNewAccessToken = () => {\n        axios.post(REFRESH_URL, refreshToken).then(res => {\n          const newAuth = {\n            ...auth,\n            accessToken: res.data.accessToken\n          };\n          setAuth(newAuth);\n        });\n      };\n      const verifyRefreshToken = () => {\n        try {\n          getNewAccessToken();\n        } catch (err) {\n          console.error(err);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      !auth.accessToken ? verifyRefreshToken() : setIsLoading(false);\n    }\n    return () => isMounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n}\n_s(PersistLogin, \"e7Q2cAruea0umDA+E+Cz2xFuK2w=\", false, function () {\n  return [useAuth];\n});\n_c = PersistLogin;\nvar _c;\n$RefreshReg$(_c, \"PersistLogin\");","map":{"version":3,"names":["Outlet","axios","useAuth","useState","useEffect","PersistLogin","REFRESH_URL","isLoading","setIsLoading","auth","setAuth","rememberUser","isMounted","refreshToken","getNewAccessToken","post","then","res","newAuth","accessToken","data","verifyRefreshToken","err","console","error"],"sources":["D:/Repo/offical-messenger/src/components/PersistLogin.js"],"sourcesContent":["import { Outlet } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function PersistLogin() {\r\n    const REFRESH_URL = 'http://localhost:4000/refresh';\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { auth, setAuth, rememberUser } = useAuth();\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if (auth === [] || !rememberUser) {\r\n            setIsLoading(false)\r\n        } else {\r\n            const refreshToken = { refreshToken: auth.refreshToken }\r\n    \r\n            const getNewAccessToken = () => {\r\n                axios.post(REFRESH_URL, refreshToken).then(res => {\r\n                    const newAuth = { ...auth, accessToken: res.data.accessToken };\r\n    \r\n                    setAuth(newAuth);\r\n                });\r\n            };\r\n    \r\n            const verifyRefreshToken = () => {\r\n                try {\r\n                    getNewAccessToken();\r\n                } catch (err) {\r\n                    console.error(err);\r\n                } finally {\r\n                    setIsLoading(false);\r\n                }\r\n            };\r\n    \r\n            !auth.accessToken ? verifyRefreshToken() : setIsLoading(false);\r\n        }\r\n\r\n        return () => isMounted = false;\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isLoading\r\n                ? <p>Loading...</p>\r\n                : <Outlet />\r\n            }\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAE5C,eAAe,SAASC,YAAY,GAAG;EAAA;EACnC,MAAMC,WAAW,GAAG,+BAA+B;EACnD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEM,IAAI;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGT,OAAO,EAAE;EAEjDE,SAAS,CAAC,MAAM;IACZ,IAAIQ,SAAS,GAAG,IAAI;IAEpB,IAAIH,IAAI,KAAK,EAAE,IAAI,CAACE,YAAY,EAAE;MAC9BH,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACH,MAAMK,YAAY,GAAG;QAAEA,YAAY,EAAEJ,IAAI,CAACI;MAAa,CAAC;MAExD,MAAMC,iBAAiB,GAAG,MAAM;QAC5Bb,KAAK,CAACc,IAAI,CAACT,WAAW,EAAEO,YAAY,CAAC,CAACG,IAAI,CAACC,GAAG,IAAI;UAC9C,MAAMC,OAAO,GAAG;YAAE,GAAGT,IAAI;YAAEU,WAAW,EAAEF,GAAG,CAACG,IAAI,CAACD;UAAY,CAAC;UAE9DT,OAAO,CAACQ,OAAO,CAAC;QACpB,CAAC,CAAC;MACN,CAAC;MAED,MAAMG,kBAAkB,GAAG,MAAM;QAC7B,IAAI;UACAP,iBAAiB,EAAE;QACvB,CAAC,CAAC,OAAOQ,GAAG,EAAE;UACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QACtB,CAAC,SAAS;UACNd,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ,CAAC;MAED,CAACC,IAAI,CAACU,WAAW,GAAGE,kBAAkB,EAAE,GAAGb,YAAY,CAAC,KAAK,CAAC;IAClE;IAEA,OAAO,MAAMI,SAAS,GAAG,KAAK;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,UACKL,SAAS,gBACJ;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI,gBACjB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA;EAAG,iBAEjB;AAEX;AAAC,GA7CuBF,YAAY;EAAA,QAGQH,OAAO;AAAA;AAAA,KAH3BG,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}