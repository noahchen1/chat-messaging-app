{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Outlet } from \"react-router-dom\";\nimport { useAuth, useRefreshToken } from \"../context/AuthProvider\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersistLogin() {\n  _s();\n  // const [isLoading, setIsLoading] = useState(true);\n  // const { auth, rememberUser } = useAuth();\n  // const refresh = useRefreshToken();\n\n  // useEffect(() => {\n  //     let isMounted = true;\n\n  //     const verifyRefreshToken = async () => {\n  //         try {\n  //             await refresh();\n  //         } catch (err) {\n  //             console.error(err);\n  //         } finally {\n  //             isMounted && setIsLoading(false);\n  //         }\n  //     };\n\n  //     // !auth.accessToken && rememberUser ? verifyRefreshToken() : setIsLoading(false);\n  //     console.log(auth.accessToken)\n  //     return () => isMounted = false;\n  // }, [])\n\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // <>\n  //     {!rememberUser\n  //         ? <Outlet />\n  //         : isLoading\n  //             ? <p>Loading...</p>\n  //             : <Outlet />\n  //     }\n  // </>\n  ;\n}\n_s(PersistLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PersistLogin;\nvar _c;\n$RefreshReg$(_c, \"PersistLogin\");","map":{"version":3,"names":["Outlet","useAuth","useRefreshToken","useState","useEffect","PersistLogin"],"sources":["D:/Repo/offical-messenger/src/components/PersistLogin.js"],"sourcesContent":["import { Outlet } from \"react-router-dom\";\r\nimport { useAuth, useRefreshToken } from \"../context/AuthProvider\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function PersistLogin() {\r\n    // const [isLoading, setIsLoading] = useState(true);\r\n    // const { auth, rememberUser } = useAuth();\r\n    // const refresh = useRefreshToken();\r\n\r\n    // useEffect(() => {\r\n    //     let isMounted = true;\r\n\r\n    //     const verifyRefreshToken = async () => {\r\n    //         try {\r\n    //             await refresh();\r\n    //         } catch (err) {\r\n    //             console.error(err);\r\n    //         } finally {\r\n    //             isMounted && setIsLoading(false);\r\n    //         }\r\n    //     };\r\n\r\n    //     // !auth.accessToken && rememberUser ? verifyRefreshToken() : setIsLoading(false);\r\n    //     console.log(auth.accessToken)\r\n    //     return () => isMounted = false;\r\n    // }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n    })\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n        // <>\r\n        //     {!rememberUser\r\n        //         ? <Outlet />\r\n        //         : isLoading\r\n        //             ? <p>Loading...</p>\r\n        //             : <Outlet />\r\n        //     }\r\n        // </>\r\n    )\r\n}\r\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAASC,OAAO,EAAEC,eAAe,QAAQ,yBAAyB;AAClE,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAE5C,eAAe,SAASC,YAAY,GAAG;EAAA;EACnC;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGAD,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;EAEF,oBACI;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER;AAAC,GAzCuBC,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}